from pathlib import Path


def generate_config(conf_obj: dict) -> str:
    """
    Generate and return a valid config from an object.
    Will save the config if an output file is passed.

    This WILL NOT currently write valid .ini files, so don't even try. The only output format is secsie.

    :param conf_obj: The dictionary to parse into a configuration language string
    :return: a string of configuration code
    """

    conf = ''
    for key, value in conf_obj.items():
        if isinstance(value, dict):
            conf += f"\n[{key.replace(' ', '')}]\n"
            for k, v in value.items():
                if isinstance(v, list):
                    conf += f'\t{k} = {", ".join(v)}\n'
                else:
                    conf += f"{';' if v == '' else ''}\t{k} = {v}\n"
            conf += "\n"
            continue
        elif isinstance(value, list):
            conf += f'{key} = {", ".join(value)}\n'
        conf += f"{key} = {value}\n"

    return conf


def generate_config_file(conf_obj: dict, output_file: str):
    """
    Generate and write a config file from a dictionary of keys and values

    :param conf_obj: The dictionary to render into the secsie config language
    :param output_file: The file to write to
    """
    output_file = Path(output_file)
    conf = generate_config(conf_obj)

    with open(output_file, 'w') as f:
        f.write(f"# {output_file.name} auto-generated by secsie\n{conf}")
